generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public", "storage"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  accounts                    accounts[]

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model buckets {
  id                         String                       @id
  name                       String                       @unique(map: "bname")
  owner                      String?                      @db.Uuid
  created_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_at                 DateTime?                    @default(now()) @db.Timestamptz(6)
  public                     Boolean?                     @default(false)
  avif_autodetection         Boolean?                     @default(false)
  file_size_limit            BigInt?
  allowed_mime_types         String[]
  owner_id                   String?
  objects                    objects[]
  s3_multipart_uploads       s3_multipart_uploads[]
  s3_multipart_uploads_parts s3_multipart_uploads_parts[]

  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model migrations {
  id          Int       @id
  name        String    @unique @db.VarChar(100)
  hash        String    @db.VarChar(40)
  executed_at DateTime? @default(now()) @db.Timestamp(6)

  @@schema("storage")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model objects {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bucket_id        String?
  name             String?
  owner            String?   @db.Uuid
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  updated_at       DateTime? @default(now()) @db.Timestamptz(6)
  last_accessed_at DateTime? @default(now()) @db.Timestamptz(6)
  metadata         Json?
  path_tokens      String[]  @default(dbgenerated("string_to_array(name, '/'::text)"))
  version          String?
  owner_id         String?
  user_metadata    Json?
  buckets          buckets?  @relation(fields: [bucket_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "objects_bucketId_fkey")

  @@unique([bucket_id, name], map: "bucketid_objname")
  @@index([bucket_id, name], map: "idx_objects_bucket_id_name")
  @@index([name], map: "name_prefix_search")
  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model s3_multipart_uploads {
  id                         String                       @id
  in_progress_size           BigInt                       @default(0)
  upload_signature           String
  bucket_id                  String
  key                        String
  version                    String
  owner_id                   String?
  created_at                 DateTime                     @default(now()) @db.Timestamptz(6)
  user_metadata              Json?
  buckets                    buckets                      @relation(fields: [bucket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  s3_multipart_uploads_parts s3_multipart_uploads_parts[]

  @@index([bucket_id, key, created_at], map: "idx_multipart_uploads_list")
  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model s3_multipart_uploads_parts {
  id                   String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  upload_id            String
  size                 BigInt               @default(0)
  part_number          Int
  bucket_id            String
  key                  String
  etag                 String
  owner_id             String?
  version              String
  created_at           DateTime             @default(now()) @db.Timestamptz(6)
  buckets              buckets              @relation(fields: [bucket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  s3_multipart_uploads s3_multipart_uploads @relation(fields: [upload_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("storage")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model accounts {
  id                  BigInt               @id @default(autoincrement())
  created_at          DateTime             @default(now()) @db.Timestamptz(6)
  user_id             String?              @db.Uuid
  bio                 String?
  location            String?
  survey              Json?                @db.Json
  preferred_language  Supported_Language?  @default(ENGLISH)
  avatar              String?
  deleted_at          DateTime?            @db.Timestamptz(6)
  name                String
  is_email_newsLetter Boolean?
  is_admin            Boolean              @default(false)
  is_approved         Boolean?             @default(false)
  is_sent             Boolean?             @default(false)
  contact_id          String?
  users               users?               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  bookmarks           bookmarks[]
  chats               chats[]
  folders             folders[]
  team_account_roles  team_account_roles[]
  teams               teams[]
  token_usages        token_usages[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teams {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  updated_at           DateTime?              @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  name                 String
  description          String?
  icon                 String?
  plan                 Team_Plan              @default(FREE)
  account_id           BigInt?
  bookmark_chunks      bookmark_chunks[]
  bookmarks            bookmarks[]
  chats                chats[]
  folders              folders[]
  team_account_roles   team_account_roles[]
  team_bookmark_fields team_bookmark_fields[]
  team_tags            team_tags[]
  team_website_fields  team_website_fields[]
  team_website_types   team_website_types[]
  accounts             accounts?              @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  token_usages         token_usages[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmark_chunks {
  id          BigInt                 @id @default(autoincrement())
  created_at  DateTime               @default(now()) @db.Timestamptz(6)
  bookmark_id String?                @db.Uuid
  content     String?
  team_id     String?                @db.Uuid
  chunk_type  Bookmark_Chunk_Type?
  deleted_at  DateTime?              @db.Timestamptz(6)
  embedding   Unsupported("vector")?
  bookmarks   bookmarks?             @relation(fields: [bookmark_id], references: [id], onUpdate: NoAction)
  teams       teams?                 @relation(fields: [team_id], references: [id], onUpdate: NoAction)

  @@index([embedding])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmarks {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?         @db.Timestamptz(6)
  deleted_at       DateTime?         @db.Timestamptz(6)
  team_id          String?           @db.Uuid
  url              String?
  tld              String?
  hostname         String?
  title            String?
  description      String?
  favicon          String?
  thumbnail        String?
  sitename         String?
  author           String?
  charset          String?
  tags             String[]
  lang             String?
  folder_id        String?           @db.Uuid
  is_favorite      Boolean?          @default(false)
  canonical        String?
  website_type     Website_Type?
  website_field    Website_Field?
  account_id       BigInt?
  bookmark_field   String?
  body_contents    String?
  application_type Application_Type? @default(WEB)
  summary          String?
  bookmark_chunks  bookmark_chunks[]
  accounts         accounts?         @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  bookmark_fields  bookmark_fields?  @relation(fields: [bookmark_field], references: [label], onUpdate: NoAction)
  folders          folders?          @relation(fields: [folder_id], references: [id], onUpdate: NoAction)
  teams            teams?            @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  chat_bookmarks   chat_bookmarks[]
  token_usages     token_usages[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model folders {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime    @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?   @db.Timestamptz(6)
  deleted_at       DateTime?   @db.Timestamptz(6)
  name             String?
  icon             String?
  order            Int?
  parent_folder_id String?     @db.Uuid
  team_id          String?     @db.Uuid
  quantity         Int?        @default(0)
  account_id       BigInt?
  bookmarks        bookmarks[]
  accounts         accounts?   @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  folders          folders?    @relation("foldersTofolders", fields: [parent_folder_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_folders    folders[]   @relation("foldersTofolders")
  teams            teams?      @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tags {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  name       String?
  quantity   Int?

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chat_bookmarks {
  id          BigInt                 @id @default(autoincrement())
  created_at  DateTime               @default(now()) @db.Timestamptz(6)
  chat_id     String?                @db.Uuid
  bookmark_id String?                @db.Uuid
  order       Int?
  similarity  Decimal?               @db.Decimal
  embedding   Unsupported("vector")?
  bookmarks   bookmarks?             @relation(fields: [bookmark_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  chats       chats?                 @relation(fields: [chat_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chats {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at        DateTime         @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?        @db.Timestamptz(6)
  deleted_at        DateTime?        @db.Timestamptz(6)
  team_id           String?          @db.Uuid
  user_prompt       String?
  search_conditions Json?            @db.Json
  account_id        BigInt?
  chat_bookmarks    chat_bookmarks[]
  accounts          accounts?        @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  teams             teams?           @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  token_usages      token_usages[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model token_usages {
  id                 BigInt     @id @default(autoincrement())
  created_at         DateTime   @default(now()) @db.Timestamptz(6)
  team_id            String?    @db.Uuid
  chat_id            String?    @db.Uuid
  prompt_or_messages String?
  prompt_tokens      BigInt?
  completion_tokens  BigInt?
  total_tokens       BigInt?
  total_cost_usd     Decimal?   @db.Decimal
  credits_usage      Decimal?   @db.Decimal
  provider           String?
  model              String?
  finishReason       String?
  embedding_tokens   BigInt?
  bookmark_id        String?    @db.Uuid
  account_id         BigInt?
  accounts           accounts?  @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  bookmarks          bookmarks? @relation(fields: [bookmark_id], references: [id], onUpdate: NoAction)
  chats              chats?     @relation(fields: [chat_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teams              teams?     @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_website_types {
  id       BigInt        @id @default(autoincrement())
  team_id  String?       @db.Uuid
  type     Website_Type?
  quantity Int?
  teams    teams?        @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_website_fields {
  id       BigInt         @id @default(autoincrement())
  team_id  String?        @db.Uuid
  field    Website_Field?
  quantity Int?
  teams    teams?         @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_tags {
  id         BigInt    @id @default(autoincrement())
  team_id    String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  tag        String?
  quantity   Int?
  teams      teams?    @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sites {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  hostname   String?  @unique(map: "sites_tld_key")
  sitename   String?
  favicon    String?

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_account_roles {
  id             BigInt         @id(map: "team_user_roles_pkey") @default(autoincrement())
  created_at     DateTime       @default(now()) @db.Timestamptz(6)
  team_id        String?        @db.Uuid
  user_role_type Team_User_Role @default(USER)
  account_id     BigInt?
  accounts       accounts?      @relation(fields: [account_id], references: [id], onUpdate: NoAction)
  teams          teams?         @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "team_account_roles_team_id_fkey")

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bookmark_fields {
  created_at           DateTime               @default(now()) @db.Timestamptz(6)
  deleted_at           DateTime?              @db.Timestamptz(6)
  label                String                 @id
  label_ko             String?
  label_en             String?
  emoji                String?
  disabled             Boolean?               @default(false)
  bookmarks            bookmarks[]
  team_bookmark_fields team_bookmark_fields[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model team_bookmark_fields {
  id              BigInt           @id @default(autoincrement())
  created_at      DateTime         @default(now()) @db.Timestamptz(6)
  team_id         String?          @db.Uuid
  quantity        Decimal?         @db.Decimal
  bookmark_field  String?
  bookmark_fields bookmark_fields? @relation(fields: [bookmark_field], references: [label], onUpdate: NoAction)
  teams           teams?           @relation(fields: [team_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum Supported_Language {
  ENGLISH
  KOREAN

  @@map("Supported Language")
  @@schema("public")
}

enum Team_Plan {
  FREE
  PRO

  @@map("Team Plan")
  @@schema("public")
}

enum Team_User_Role {
  OWNER
  ADMIN
  USER
  VIEWER

  @@map("Team User Role")
  @@schema("public")
}

enum Website_Type {
  ECOMMERCE
  BUSINESS
  BLOG
  PORTFOLIO
  EVENT
  PERSONAL
  MEMBERSHIP
  NONPROFIT
  INFORMATIONAL
  ONLINE_FORUM
  COMMUNITY
  STARTUP
  CONSULTING
  BOOKING
  PETITION
  SCHOOL
  HOBBY
  INTERACTIVE
  ENTERTAINMENT
  WEDDING
  TRAVEL
  DIRECTORY
  LANDING_PAGE
  NEWS_MAGAZINE
  MEMORIAL
  SUBSCRIPTION
  KIDS
  WEBSITE

  @@map("Website Type")
  @@schema("public")
}

enum Website_Field {
  TECHNOLOGY
  SPORTS
  FASHION
  HEALTH
  EDUCATION
  ENTERTAINMENT
  NEWS
  BUSINESS
  FINANCE
  TRAVEL
  FOOD
  LIFESTYLE
  SCIENCE
  ART
  HISTORY
  BOOKS
  MOVIES
  MUSIC
  GAMING
  PHOTOGRAPHY
  DIY
  CARS
  GARDENING
  PETS
  RELIGION
  PARENTING
  POLITICS
  ENVIRONMENT
  REAL_ESTATE
  CAREER
  FITNESS
  BEAUTY
  ANIME
  COMICS
  HOBBIES
  WEDDINGS
  MILITARY
  GOVERNMENT
  ARCHITECTURE
  ENGINEERING
  SOCIAL_MEDIA
  MARKETING
  ADVERTISING
  MEDICINE
  LAW
  CULTURE
  PHILOSOPHY
  PSYCHOLOGY
  LANGUAGES
  NONE
  KIDS
  INTERIOR_DESIGN
  DESIGN

  @@map("Website Field")
  @@schema("public")
}

enum Bookmark_Chunk_Type {
  BODY
  META
  TAGS
  TYPE
  FIELD
  MEMO

  @@map("Bookmark Chunk Type")
  @@schema("public")
}

enum Application_Type {
  WEB
  CHROME_EXTENSION
  APP
  IMPORT_FROM_BROWSER

  @@map("Application Type")
  @@schema("public")
}
